package connectingFolksWeb;

import java.util.LinkedHashMap;
import java.util.Scanner;

public class CreatePost
{

	public void Option(String userName) 
	{
        Scanner input=new Scanner(System.in);
        System.out.println("..............Choose One Option.............");
        System.out.println(" 1.Post  \n 2.View own post \n 3.View tagged post \n 2.Exit ");
        int ch=input.nextInt();
        switch (ch)
        {
		case 1: {
		    	createAPost(userName);
			break;
		}
		case 2:
			viewOwnPost(userName);
			break;
		case 3:
			viewTaggedPost(userName);
			break;
		
		
		case 4:
		{
			UserIdHome obj=new UserIdHome();
 	       obj.userAccount();
 	    	 
			break;
		}

	}

}

	private void viewTaggedPost(String userName) {
		// TODO Auto-generated method stub
		
	}

	private void viewOwnPost(String userName) {
		// TODO Auto-generated method stub
		
	}

	private void createAPost(String userName)
	{
		LinkedHashMap<String,String> comments=new LinkedHashMap<>();
	     LinkedHashMap<String,String> likes=new LinkedHashMap<>();
	 	
		System.out.println();
		System.out.println("........Share your Knowledge Section.......");
            Scanner input=new Scanner(System.in);

            System.out.println("From : "+userName);
            System.out.println("TO : ");
            String shareTo=input.nextLine();
            
            
                boolean checkToaddress=LogInPage.database.containsKey(shareTo);
            
                if(checkToaddress==false) 
                {
               	 System.out.println("        [   *This username [ "+shareTo+" ] cannot found  ]     ");
                    Option(userName);      
                }
            
            System.out.println("Subject : ");
            String subject=input.nextLine();
            System.out.println("Message : ");
            String message =input.nextLine();
            int postID=(int)(Math.random()*100+100);
            System.out.println("Comment To "+shareTo + " :");
            String com=input.nextLine();
            comments.put(userName, com);
            PostDetails details=new PostDetails(userName,shareTo,subject,message,postID,LinkedHashMap<String, String> comments,LinkedHashMap<String, String> likes);

            boolean msgSendOrNot=SendorNot(shareTo,details,postID);
            if(msgSendOrNot) {
             LinkedHashMap mail=new Loginpage().database.get(fromName).mails;
             mail.put(MessageID, composeDetails);
             System.out.println("     [  Message Added mailbox  ]   ");
            }
            Option(fromName);
	}

	private boolean SendorNot(String shareTo,PostDetails details,int postID) {
        LinkedHashMap toReceivedPost=new LogInPage().database.get(shareTo).receivedPost;
        toReceivedMail.put(MessageID, composedetails);
        System.out.println();
        System.out.println("        [  Message Succesfully Send to  "+toname+"       ]");
        System.out.println();
        return true;
	}

	}
		
	}
