package mentorSathishSan;
import java.util.Stack;
import java.lang.Character;
public class SimpleCalculator 
{
	 static boolean letterOrDigit(char c)
	    {
	        if (Character.isLetterOrDigit(c))
	            return true;
	        else
	            return false;
	    }
	 static int getPriority(char ch)
	 {
		 if(ch=='+'||ch=='-')
		 return 1;
		 else if(ch=='*'||ch=='/')
			 return 2;
		 if(ch=='^')
			 return 3;
		 else
			 return -1;
		 
	 }
	 static boolean leftAssociativity(char ch)
	 {
		 if(ch=='+'||ch=='-'||ch=='*'||ch=='/')
			 return true;
		 else			 
		return false;
		 
	 }
	 static String infixToPostfix(String arithmeticExpression)
	 {
		 Stack<Character> operatorStack=new Stack<>();
		 String postFix=new String("");
		 for(int i=0;i<arithmeticExpression.length();++i)
		 {
			 char c=arithmeticExpression.charAt(i);
			 if(letterOrDigit(c))
			 postFix+=c;
			 else if(c=='(')
				 operatorStack.push(c);
			 else if(c==')')
			 {
				 while(!operatorStack.isEmpty() && getPriority(c)<=getPriority(operatorStack.peek()) && leftAssociativity(c))
				 {
					 postFix+=operatorStack.pop();
				 }
				 operatorStack.push(c);
			 }
		 }
	 while(!operatorStack.isEmpty())
	 {
		 if(operatorStack.peek()==')')
			 return "Invalid Arithmetic Expression ";
		 postFix+=operatorStack.pop();
			 
	 }
	 return postFix;
	 }
	 public static void main(String[] args)
	 {
		 String arithmeticExpression="5+2";
		 System.out.println(infixToPostfix(arithmeticExpression));
	 }
}
